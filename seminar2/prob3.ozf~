declare
fun {Filter L H}
   case L
   of nil then nil
   [] A|As then if (A mod H==0)then {Filter As H}
		else A|{Filter As H}
		end
   end
end
fun {Sieve L}
   case L
   of nil then nil
   [] H|T then H|{Sieve {Filter T H}}
   end
end

fun lazy {Gen N}
   N|{Gen N+1}
end


fun {Prime}
   {Sieve {Gen 2}}
end

fun {GetAfterHelper N L}
   case L
   of H|T then if H>N then N
	  else {GetAfterHelper N T}
	  end
   else 'asd'
   end
end

fun {GetAfter N}
   {GetAfterHelper N {Prime}}
end
{Browse 10}